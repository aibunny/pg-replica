services:
  master-psql:
    image: postgres:latest
    container_name: master_psql
    restart: always
    env_file:
      - .database.env
    environment:
      POSTGRES_USER: "${MASTER_USER}"
      POSTGRES_PASSWORD: "${MASTER_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication replicator 0.0.0.0/0 trust"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "${MASTER_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data #Data Volume
      - pgbackrest_backup:/var/lib/pgbackrest/backups #Data Volume
      - ./init/:/docker-entrypoint-initdb.d
      - ./files/pgbackrest.conf:/etc/pgbackrest/pgbackrest.conf:ro
    command: >
      bash -c '
        until 
        bash /docker-entrypoint-initdb.d/cron-backup.sh
        do
        echo "Setting up cron backup"
        sleep 1
        done
        echo "Cron Job setup"
        until 
        sudo pgbackrest --stanza=aibunny--delta --log-level-console=detail restore
        do
        echo "connecting to backup repo"
        sleep 1
        done
        echo "Restoring backup successfully"
        sudo chown -R postgres:postgres /var/lib/postgresql/data
        sudo chmod 0700 /var/lib/postgresql/data
        postgres \
        -c "wal_level=replica" \
        -c "hot_standby=on" \
        -c "max_wal_senders=15" \
        -c "max_replication_slots=10" \
        -c "hot_standby_feedback=on" \
        -c "wal_log_hints=on" 

        '
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_pooler:
    container_name: pg_pooler
    image: ghcr.io/postgresml/pgcat:latest
    restart: always
    command: >
      pgcat /etc/pgcat/pgcat.toml
    ports:
      - "6432:6432"
      - "9930:9930"
    depends_on:
      master_psql:
        condition: service_healthy
    volumes:
      - cache:/data
      - ./files/pgcat.toml:/etc/pgcat/pgcat.toml


volumes:
  pgdata:
    driver: local
  cache:
    driver: local
  pgbackrest_backup:
    driver: local